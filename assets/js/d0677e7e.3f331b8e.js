"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[3233],{97499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=t(85893),s=t(11151),r=t(74866),i=t(85162);const o={title:"Building Client-Server Interaction Layer"},l=void 0,c={id:"tutorial/project/best-practice/csil",title:"Building Client-Server Interaction Layer",description:"This is a practical experience summarized by using alova in depth. Please make sure you have mastered the content of the alova basics section before reading. You can also watch the 5-minute quick start video.",source:"@site/docs/tutorial/07-project/01-best-practice/02-csil.md",sourceDirName:"tutorial/07-project/01-best-practice",slug:"/tutorial/project/best-practice/csil",permalink:"/tutorial/project/best-practice/csil",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/tutorial/07-project/01-best-practice/02-csil.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Building Client-Server Interaction Layer"},sidebar:"tutorial",previous:{title:"Manage APIs",permalink:"/tutorial/project/best-practice/manage-apis"},next:{title:"Skills",permalink:"/tutorial/project/best-practice/skills"}},d={},u=[{value:"Request point separation",id:"request-point-separation",level:2},{value:"Responsive states centralized management",id:"responsive-states-centralized-management",level:2},{value:"Update states across components",id:"update-states-across-components",level:3},{value:"Refresh data across components",id:"refresh-data-across-components",level:3},{value:"Centralized management of response data",id:"centralized-management-of-response-data",level:2},{value:"Cache timeliness",id:"cache-timeliness",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["This is a practical experience summarized by using alova in depth. Please make sure you have mastered the content of the ",(0,a.jsx)(n.a,{href:"/tutorial/getting-started/quick-start",children:"alova basics"})," section before reading. You can also watch the ",(0,a.jsx)(n.a,{href:"/video-tutorial",children:"5-minute quick start video"}),"."]})}),"\n",(0,a.jsx)(n.p,{children:"You can combine various features of alova to implement the Client-Server Interaction Layer(CSIL) of your application. The CSIL will manage your response data and the responsive states created by useHooks. They will establish a mapping relationship in the CSIL through method instances, thereby eliminating the limitation of component hierarchy. You can access, modify and refresh the data of the CSIL through method instances in any UI component, and call the actions of useHooks."}),"\n",(0,a.jsx)(n.mermaid,{value:"graph TD\n  A[Page1]\n  A --\x3e B[Component1]\n  A --\x3e C[Component2]\n  A --\x3e D[Component3]\n\n  E[Page2]\n  E --\x3e F[Component1]\n  E --\x3e G[Component2]\n  E --\x3e H[Component3]\n\n  B --\x3e K[CSIL]\n  C --\x3e K\n  D --\x3e K\n  F --\x3e K\n  G --\x3e K\n  H --\x3e K\n  K --\x3e L[Backend API Service]\n  subgraph UI\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n  end\n\nclass K specialNode;\nclassDef specialNode fill:transparent,stroke:#10b13c50,color:#10b13c,stroke-width:2px;"}),"\n",(0,a.jsx)(n.p,{children:"Let's see what benefits the CSIL can bring us."}),"\n",(0,a.jsx)(n.h2,{id:"request-point-separation",children:"Request point separation"}),"\n",(0,a.jsx)(n.p,{children:"In traditional practice, when a page is divided into multiple components, we need to request data from the root node and distribute it to the subcomponents, which undoubtedly increases the complexity of data transmission."}),"\n",(0,a.jsx)(n.mermaid,{value:"  graph TD\n  A[Page root node -> distribute response data to subcomponents]\n  A --\x3e B[component 1]\n  A --\x3e C[component 2]\n  A --\x3e D[component 3]\n\n  subgraph page\n    A\n    B\n    C\n    D\n  end"}),"\n",(0,a.jsx)(n.p,{children:"Now, you can initiate the same request in different components, and the CSIL will merge the requests and distribute the data to these components."}),"\n",(0,a.jsx)(n.mermaid,{value:"  graph TD\n  B[component 1]\n  C[component 2]\n  D[component 3]\n  B --\x3e E[CSIL]\n  C --\x3e E\n  D --\x3e E\n  E --\x3e F[API service]\n\n  subgraph page\n    B\n    C\n    D\n  end"}),"\n",(0,a.jsx)(n.p,{children:"Let's take a closer look at the sample code."}),"\n","\n",(0,a.jsxs)(r.Z,{groupId:"framework",children:[(0,a.jsx)(i.Z,{value:"1",label:"vue",children:(0,a.jsxs)(r.Z,{className:"file-tabs",children:[(0,a.jsx)(i.Z,{value:"1",label:"PageRoot.vue",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<template>\n  <profile></profile>\n  <assets></assets>\n</template>\n\n<script setup>\n  import Profile from './component/profile.vue';\n  import Assets from './component/assets.vue';\n<\/script>\n"})})}),(0,a.jsx)(i.Z,{value:"2",label:"./component/profile.vue",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<template>\n  <div v-if=\"loading\">loading...</div>\n  <div v-else>\n    <p>name: {{ data.name }}</p>\n    <p>age: {{ data.age }}</p>\n  </div>\n</template>\n\n<script setup>\n  import { useRequest } from 'alova/client';\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n<\/script>\n"})})}),(0,a.jsx)(i.Z,{value:"3",label:"./component/assets.vue",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<template>\n  <div>\n    <div v-if=\"loading\">loading...</div>\n    <div v-else>\n      <p>balance: {{ data.balance }}</p>\n      <p>coins: {{ data.coins }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { useRequest } from 'alova/client';\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n<\/script>\n"})})})]})}),(0,a.jsx)(i.Z,{value:"2",label:"react",children:(0,a.jsxs)(r.Z,{className:"file-tabs",children:[(0,a.jsx)(i.Z,{value:"1",label:"PageRoot.jsx",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import Profile from './component/profile';\nimport Assets from './component/assets';\n\nconst App = () => {\n  return (\n    <>\n      <Profile></Profile>\n      <Assets></Assets>\n    </>\n  );\n};\n"})})}),(0,a.jsx)(i.Z,{value:"2",label:"./component/profile.jsx",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { useRequest } from 'alova/client';\n\nconst Profile = () => {\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n  return loading ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <p>name: {data.name}</p>\n      <p>age: {data.age}</p>\n    </div>\n  );\n};\n"})})}),(0,a.jsx)(i.Z,{value:"3",label:"./component/assets.jsx",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { useRequest } from 'alova/client';\n\nconst Assets = () => {\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n  return loading ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <p>balance: {data.balance}</p>\n      <p>coins: {data.coins}</p>\n    </div>\n  );\n};\n"})})})]})}),(0,a.jsx)(i.Z,{value:"3",label:"svelte",children:(0,a.jsxs)(r.Z,{className:"file-tabs",children:[(0,a.jsx)(i.Z,{value:"1",label:"PageRoot.svelte",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\n  import Profile from './component/profile.svelte';\n  import Assets from './component/assets.svelte';\n<\/script>\n\n<profile></profile>\n<assets></assets>\n"})})}),(0,a.jsx)(i.Z,{value:"2",label:"./component/profile.svelte",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\n  import { useRequest } from 'alova/client';\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n<\/script>\n\n{#if $loading}\n<div>loading...</div>\n{#else}\n<div>\n  <p>name: {$data.name}</p>\n  <p>age: {$data.age}</p>\n</div>\n{/if}\n"})})}),(0,a.jsx)(i.Z,{value:"3",label:"./component/assets.svelte",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\n  import { useRequest } from 'alova/client';\n  const { loading, data } = useRequest(alova.Get('/api/user'));\n<\/script>\n\n{#if $loading}\n<div>loading...</div>\n{#else}\n<div>\n  <p>balance: {$data.balance}</p>\n  <p>coins: {$data.coins}</p>\n</div>\n{/if}\n"})})})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"responsive-states-centralized-management",children:"Responsive states centralized management"}),"\n",(0,a.jsx)(n.p,{children:"Since responsive states is managed in the CSIL, you can quickly update or refresh them across components. For example, you can use it in the following scenarios:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Update list after adding/editing list items"}),"\n",(0,a.jsx)(n.li,{children:"Notify the previous page to refresh data in the App"}),"\n",(0,a.jsx)(n.li,{children:"Refresh the menu bar after editing permissions"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"update-states-across-components",children:"Update states across components"}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.a,{href:"/tutorial/client/in-depth/update-across-components",children:(0,a.jsx)(n.code,{children:"updateState"})})," and pass in a method instance to implement cross-component update responsive state. In addition, you can also let the CS interaction layer ",(0,a.jsx)(n.a,{href:"/tutorial/client/in-depth/manage-extra-states",children:"manage custom states"})," to allow custom states to support cross-component updates."]}),"\n",(0,a.jsx)(n.h3,{id:"refresh-data-across-components",children:"Refresh data across components"}),"\n",(0,a.jsx)(n.p,{children:"There are two ways to refresh data across components."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Pass in a method instance through ",(0,a.jsx)(n.a,{href:"/tutorial/client/strategy/use-fetcher",children:(0,a.jsx)(n.code,{children:"useFetcher"})}),", which will re-request data and update the responsive states corresponding to this method instance."]}),"\n",(0,a.jsxs)(n.li,{children:["Cross-component triggering of useHooks actions to complete data refresh, please refer to ",(0,a.jsx)(n.a,{href:"/tutorial/client/strategy/action-delegation-middleware",children:"action delegation middleware"})," for details"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"centralized-management-of-response-data",children:"Centralized management of response data"}),"\n",(0,a.jsxs)(n.p,{children:["When response data caching is enabled, the CSIL will cache response data according to certain rules, and the same request will reuse cached data to improve performance. For details, please refer to the ",(0,a.jsx)(n.a,{href:"/tutorial/cache",children:"Response Cache"})," section. In addition, you can also predict the data that the user will access next, use ",(0,a.jsx)(n.a,{href:"/tutorial/client/strategy/use-fetcher",children:(0,a.jsx)(n.code,{children:"useFetcher"})})," to pre-request the data and put it in the cache."]}),"\n",(0,a.jsx)(n.h3,{id:"cache-timeliness",children:"Cache timeliness"}),"\n",(0,a.jsx)(n.p,{children:"There is a question that everyone is very concerned about, how to ensure the timeliness of the cache? Alova also provides a variety of ways to handle the timeliness of the cache."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/tutorial/cache/auto-invalidate",children:"Automatic Invalidation"}),": Automatically invalidate the specified cache by setting invalidation rules."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/tutorial/cache/force-request",children:"Cache Penetration"}),": For data with high timeliness, you can obtain the latest data through forced requests."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/tutorial/client/strategy/use-auto-request",children:"Scheduled update"}),": Use ",(0,a.jsx)(n.code,{children:"useAutoRequest"})," to automatically update data in different scenarios."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/tutorial/cache/manually-invalidate",children:"Manual invalidation"}),": If none of the above methods are suitable, you can manually call the invalidation function."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>i});t(67294);var a=t(90512);const s={tabItem:"tabItem_Ymn6"};var r=t(85893);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,i),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(67294),s=t(90512),r=t(12466),i=t(16550),o=t(20469),l=t(91980),c=t(67392),d=t(20812);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=p(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,u]=m({queryString:t,groupId:s}),[f,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Nk)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),g=(()=>{const e=c??f;return h({value:e,tabValues:r})?e:null})();(0,o.Z)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),v(e)}),[u,v,r]),tabValues:r}}var v=t(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function b(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==a&&(c(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.Z)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,s.Z)("tabs-container",g.tabList),children:[(0,x.jsx)(b,{...n,...e}),(0,x.jsx)(j,{...n,...e})]})}function w(e){const n=(0,v.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var a=t(67294);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);