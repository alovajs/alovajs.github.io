"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[5126],{32389:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var t=i(85893),l=i(11151);const o={title:"API Filter"},r=void 0,s={id:"resource/devtool-plugins/filter-api",title:"API Filter",description:"Introduction",source:"@site/docs/resource/04-devtool-plugins/04-filter-api.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/filter-api",permalink:"/resource/devtool-plugins/filter-api",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/04-filter-api.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"API Filter"},sidebar:"resource",previous:{title:"Payload Modifier",permalink:"/resource/devtool-plugins/payload-modifier"},next:{title:"Apifox Fetcher",permalink:"/resource/devtool-plugins/apifox"}},c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Multi-Condition Configuration",id:"multi-condition-configuration",level:2},{value:"Combining Include and Exclude",id:"combining-include-and-exclude",level:3},{value:"Custom Matching Rules",id:"custom-matching-rules",level:3}];function u(n){const e={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(e.p,{children:"This plugin is used to filter API interfaces based on URLs or tags, supporting multiple matching rules and combination conditions. Key features include:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Filter by URL or tag"}),"\n",(0,t.jsx)(e.li,{children:"Support for include and exclude rules"}),"\n",(0,t.jsx)(e.li,{children:"Support for string, regular expression, or custom function matching"}),"\n",(0,t.jsx)(e.li,{children:"Support for multi-condition combination filtering"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"import { defineConfig } from '@alova/wormhole';\nimport { apiFilter } from '@alova/wormhole/plugin';\n\nexport default defineConfig({\n  generator: [\n    {\n      // ...\n      plugin: [\n        // Filter APIs containing a specific URL\n        apiFilter({ include: '/api/user' })\n      ]\n    }\n  ]\n});\n"})}),"\n",(0,t.jsx)(e.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"interface Config {\n  /**\n   * Filter scope, defaults to 'url'\n   * url: Filter by API path\n   * tag: Filter by tag\n   */\n  scope?: 'url' | 'tag';\n\n  /**\n   * Include rule\n   * string: Include this string\n   * RegExp: Match this regex\n   * function: Custom matching function\n   */\n  include?: string | RegExp | ((key: string) => boolean);\n\n  /**\n   * Exclude rule\n   * string: Include this string\n   * RegExp: Match this regex\n   * function: Custom matching function\n   */\n  exclude?: string | RegExp | ((key: string) => boolean);\n}\n\nfunction apiFilter(config: Config | Config[]): ApiPlugin;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"multi-condition-configuration",children:"Multi-Condition Configuration"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"// Configure multiple filter conditions simultaneously\n// The final result is the union of all conditions\napiFilter([\n  {\n    scope: 'url',\n    include: /^\\/api\\/user/ // Include URLs starting with /api/user\n  },\n  {\n    scope: 'tag',\n    include: 'admin' // Include APIs with the 'admin' tag\n  }\n]);\n"})}),"\n",(0,t.jsx)(e.h3,{id:"combining-include-and-exclude",children:"Combining Include and Exclude"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"// Include specific URLs but exclude certain APIs\napiFilter({\n  include: /\\/api\\/user/,\n  exclude: '/api/user/list' // Exclude /api/user/list\n});\n"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Note"}),": When both ",(0,t.jsx)(e.code,{children:"include"})," and ",(0,t.jsx)(e.code,{children:"exclude"})," are specified, the result will exclude APIs matched by ",(0,t.jsx)(e.code,{children:"exclude"})," from the ",(0,t.jsx)(e.code,{children:"include"})," result."]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"custom-matching-rules",children:"Custom Matching Rules"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"// Use a custom function for matching\napiFilter({\n  scope: 'url',\n  include: key => key.startsWith('/api') && key.length > 10 // Include URLs starting with /api and longer than 10 characters\n});\n"})})]})}function d(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},11151:(n,e,i)=>{i.d(e,{Z:()=>s,a:()=>r});var t=i(67294);const l={},o=t.createContext(l);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);