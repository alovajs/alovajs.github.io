"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[5997],{4628:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=n(85893),r=n(11151);const i={title:"Type Replacer"},s=void 0,a={id:"resource/devtool-plugins/import-type",title:"Type Replacer",description:"Introduction",source:"@site/docs/resource/04-devtool-plugins/06-import-type.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/import-type",permalink:"/resource/devtool-plugins/import-type",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/06-import-type.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Type Replacer"},sidebar:"resource",previous:{title:"Apifox Fetcher",permalink:"/resource/devtool-plugins/apifox"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Multi-Module Configuration",id:"multi-module-configuration",level:3},{value:"Custom Module Paths",id:"custom-module-paths",level:3}];function u(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"importType"})," plugin is used to replace custom types in ",(0,o.jsx)(t.code,{children:"global.d.ts"})," by searching and replacing imported names. Key features include:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Supports batch replacement of imported types in global type definitions"}),"\n",(0,o.jsx)(t.li,{children:"Supports importing and replacing types from multiple modules"}),"\n",(0,o.jsx)(t.li,{children:"Supports custom module paths and type names"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"import { defineConfig } from '@alova/wormhole';\nimport { importType } from '@alova/wormhole/plugin';\n\nexport default defineConfig({\n  generator: [\n    {\n      // ...\n      plugin: [\n        // Replace type imports in `global.d.ts`\n        importType({\n          bar: ['Apis', 'Foo'], // import { Apis, Foo } from \"bar\"\n          '@types/bar': ['Bar'], // import { Bar } from \"@types/bar\"\n          'vue|type': ['Vue'] // import type { Vue } from \"vue\"\n        })\n      ]\n    }\n  ]\n});\n"})}),"\n",(0,o.jsxs)(t.p,{children:["After this, the automatically generated type definitions like ",(0,o.jsx)(t.code,{children:"bar"})," and ",(0,o.jsx)(t.code,{children:"Bar"})," in ",(0,o.jsx)(t.code,{children:"global.d.ts"})," will be replaced with the user-imported types, thereby modifying the auto-generated types."]}),"\n",(0,o.jsx)(t.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"importType"})," accepts an object as a parameter, where the keys are module paths and the values are arrays of type names to be imported."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"interface ImportTypeConfig {\n  /**\n   * Module path\n   * Supports regular module paths (e.g., 'bar') or typed module paths (e.g., 'vue|type')\n   */\n  [modulePath: string]: string[];\n}\n\nfunction importType(config: ImportTypeConfig): ApiPlugin;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"multi-module-configuration",children:"Multi-Module Configuration"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"// Configure type replacements for multiple modules simultaneously\nimportType({\n  bar: ['Apis', 'Foo'],\n  '@types/bar': ['Bar'],\n  'vue|type': ['Vue']\n});\n"})}),"\n",(0,o.jsx)(t.h3,{id:"custom-module-paths",children:"Custom Module Paths"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"// Use typed module paths\nimportType({\n  'vue|type': ['Vue'] // import type { Vue } from \"vue\"\n});\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var o=n(67294);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);