"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[9694],{33105:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=t(85893),i=t(11151);const r={title:"Tag Modifier"},o=void 0,l={id:"resource/devtool-plugins/tag-modifier",title:"Tag Modifier",description:"Introduction",source:"@site/docs/resource/04-devtool-plugins/02-tag-modifier.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/tag-modifier",permalink:"/resource/devtool-plugins/tag-modifier",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/02-tag-modifier.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Tag Modifier"},sidebar:"resource",previous:{title:"Renaming",permalink:"/resource/devtool-plugins/rename"},next:{title:"Payload Modifier",permalink:"/resource/devtool-plugins/payload-modifier"}},s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Add a Prefix",id:"example-1-add-a-prefix",level:3},{value:"Example 2: Filter Specific Tags",id:"example-2-filter-specific-tags",level:3},{value:"Example 3: Convert to Camel Case",id:"example-3-convert-to-camel-case",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(n.p,{children:["This plugin is used to modify the ",(0,a.jsx)(n.code,{children:"tags"})," of APIs from OpenAPI files."]}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"import { defineConfig } from '@alova/wormhole';\nimport { tagModifier } from '@alova/wormhole/plugin';\n\nexport default defineConfig({\n  generator: [\n    {\n      // ...\n      plugin: [\n        // Each API will call the callback function to return a new tag. If you don't want to modify a tag, return the original tag directly.\n        tagModifier(tag => tag.toUpperCase()); // Example: Convert tag to uppercase\n      ]\n    }\n  ]\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"type ModifierHandler = (tag: string) => string;\n\nfunction tagModifier(handler: ModifierHandler): ApiPlugin;\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"handler"}),": A function that takes the current ",(0,a.jsx)(n.code,{children:"tag"})," as a parameter and returns the modified ",(0,a.jsx)(n.code,{children:"tag"}),". If you don't want to modify it, return the original ",(0,a.jsx)(n.code,{children:"tag"})," directly."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"example-1-add-a-prefix",children:"Example 1: Add a Prefix"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Add "api_" prefix to all tags\ntagModifier(tag => `api_${tag}`);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"example-2-filter-specific-tags",children:"Example 2: Filter Specific Tags"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Only modify tags containing \"user\"\ntagModifier(tag => {\n  if (tag.includes('user')) {\n    return tag.replace('user', 'member');\n  }\n  return tag; // Keep other tags unchanged\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"example-3-convert-to-camel-case",children:"Example 3: Convert to Camel Case"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Convert tags to camel case\ntagModifier(tag => {\n  return tag\n    .split('_')\n    .map((part, index) => {\n      if (index === 0) return part;\n      return part.charAt(0).toUpperCase() + part.slice(1);\n    })\n    .join('');\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var a=t(67294);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);