"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[7066],{45724:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=t(85893),n=t(11151);const s={title:"Redis Storage Adapter"},i=void 0,o={id:"resource/storage-adapter/redis",title:"Redis Storage Adapter",description:"Store data through redis and support distributed clusters. Use ioredis to implement it.",source:"@site/docs/resource/02-storage-adapter/03-redis.md",sourceDirName:"resource/02-storage-adapter",slug:"/resource/storage-adapter/redis",permalink:"/resource/storage-adapter/redis",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/02-storage-adapter/03-redis.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Redis Storage Adapter"},sidebar:"resource",previous:{title:"File Storage Adapter",permalink:"/resource/storage-adapter/file"},next:{title:"Framework",permalink:"/category/framework"}},d={},l=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Set the storage key prefix",id:"set-the-storage-key-prefix",level:3},{value:"Use an external redis instance",id:"use-an-external-redis-instance",level:3}];function c(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:["Store data through redis and support distributed clusters. Use ",(0,r.jsx)(a.a,{href:"https://www.npmjs.com/package/ioredis",children:"ioredis"})," to implement it."]}),"\n",(0,r.jsx)(a.admonition,{title:"Tips",type:"info",children:(0,r.jsx)(a.p,{children:"Only alova 3.0+ is supported."})}),"\n",(0,r.jsx)(a.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"# npm\nnpm install alova @alova/storage-redis --save\n# yarn\nyarn add alova @alova/storage-redis\n# npm\npnpm install alova @alova/storage-redis\n"})}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(a.h3,{id:"basic-usage",children:"Basic usage"}),"\n",(0,r.jsxs)(a.p,{children:["Create ",(0,r.jsx)(a.code,{children:"RedisStorageAdapter"})," and specify the redis server connection information."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"const { createAlova } = require('alova');\nconst RedisStorageAdapter = require('@alova/storage-redis');\n\nconst redisAdapter = new RedisStorageAdapter({\n  host: 'localhost',\n  port: '6379',\n  username: 'default',\n  password: 'my-top-secret',\n  db: 0\n});\nconst alovaInstance = createAlova({\n  // ...\n  l2Cache: redisAdapter\n});\n"})}),"\n",(0,r.jsx)(a.h3,{id:"set-the-storage-key-prefix",children:"Set the storage key prefix"}),"\n",(0,r.jsxs)(a.p,{children:["By default, the storage key prefix is \u200b\u200b",(0,r.jsx)(a.code,{children:"alova:"}),", which can be set via ",(0,r.jsx)(a.code,{children:"keyPrefix"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"const redisAdapter = new RedisStorageAdapter({\n  host: 'localhost',\n  port: '6379',\n  username: 'default',\n  password: 'my-top-secret',\n  db: 0,\n\n  // highlight-start\n  keyPrefix: 'my-app:'\n  // highlight-end\n});\n"})}),"\n",(0,r.jsx)(a.h3,{id:"use-an-external-redis-instance",children:"Use an external redis instance"}),"\n",(0,r.jsxs)(a.p,{children:["If you already have an ",(0,r.jsx)(a.code,{children:"ioredis"})," instance in your project and want to use it for operations, you can set it through ",(0,r.jsx)(a.code,{children:"client"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"const redisAdapter = new RedisStorageAdapter({\n  client: originalRedisClient\n});\n"})})]})}function p(e={}){const{wrapper:a}={...(0,n.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,a,t)=>{t.d(a,{Z:()=>o,a:()=>i});var r=t(67294);const n={},s=r.createContext(n);function i(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);