"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1856],{34466:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var s=a(85893),r=a(11151);const t={title:"Renaming"},o=void 0,i={id:"resource/devtool-plugins/rename",title:"Renaming",description:"Introduction",source:"@site/docs/resource/04-devtool-plugins/01-rename.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/rename",permalink:"/resource/devtool-plugins/rename",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/01-rename.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Renaming"},sidebar:"resource",previous:{title:"Plugin Development Guide",permalink:"/resource/devtool-plugins/"},next:{title:"Tag Modifier",permalink:"/resource/devtool-plugins/tag-modifier"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Multi-Rule Configuration",id:"multi-rule-configuration",level:2},{value:"Custom Matching Rules",id:"custom-matching-rules",level:3},{value:"Custom Transformation Function",id:"custom-transformation-function",level:3}];function u(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"This plugin is used to rename URLs and parameters of API interfaces, supporting multiple naming styles and custom transformation rules. Key features include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Renaming for URLs, request parameters, path parameters, request bodies, response data, and reference type names."}),"\n",(0,s.jsx)(n.li,{children:"Built-in naming conversions: camelCase, pascalCase, kebabCase, and snakeCase."}),"\n",(0,s.jsx)(n.li,{children:"Support for custom matching rules and transformation functions."}),"\n",(0,s.jsx)(n.li,{children:"Support for multi-rule configurations."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"import { defineConfig } from '@alova/wormhole';\nimport { rename } from '@alova/wormhole/plugin';\n\nexport default defineConfig({\n  generator: [\n    {\n      // ...\n      plugin: [\n        // Convert underscores in URLs to camelCase\n        rename({ style: 'camelCase' })\n      ]\n    }\n  ]\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface Config {\n  /**\n   * Scope of application, defaults to 'url'.\n   * url: API path\n   * params: Query parameters\n   * pathParams: Path parameters\n   * data: Request body data\n   * response: Response data\n   * refName: Reference type name\n   */\n  scope?: 'url' | 'params' | 'pathParams' | 'data' | 'response' | 'refName';\n\n  /**\n   * Matching rule. If not specified, all will be converted.\n   * string: Contains this string\n   * RegExp: Matches this regex\n   * function: Custom matching function\n   */\n  match?: string | RegExp | ((key: string) => boolean);\n\n  /**\n   * Naming style.\n   * camelCase: camelCase (userName)\n   * kebabCase: kebab-case (user-name)\n   * snakeCase: snake_case (user_name)\n   * pascalCase: PascalCase (UserName)\n   */\n  style?: 'camelCase' | 'kebabCase' | 'snakeCase' | 'pascalCase';\n\n  /**\n   * Custom transformation function.\n   * Executed before style conversion.\n   */\n  transform?: (apiDescriptor: ApiDescriptor) => string;\n}\n\nfunction rename(config: Config | Config[]): ApiPlugin;\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"})," 1. ",(0,s.jsx)(n.code,{children:"refName"})," and ",(0,s.jsx)(n.code,{children:"kebabCase"})," cannot be configured simultaneously because type names cannot be in kebab-case format. 2. ",(0,s.jsx)(n.code,{children:"params"}),", ",(0,s.jsx)(n.code,{children:"pathParams"}),", ",(0,s.jsx)(n.code,{children:"data"}),", and ",(0,s.jsx)(n.code,{children:"response"})," only rename the first-level names."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"multi-rule-configuration",children:"Multi-Rule Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Configure multiple transformation rules simultaneously.\n// Before: /api/get_data/{item_id}\n// After: /api/getData/{itemId}\nrename([\n  {\n    scope: 'url',\n    style: 'camelCase',\n    match: /_/ // Only convert parts containing underscores\n  },\n  {\n    scope: 'pathParams',\n    style: 'camelCase'\n  }\n]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-matching-rules",children:"Custom Matching Rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Only rename parameter names longer than 5 characters.\nrename({\n  scope: 'params',\n  match: key => key.length > 5,\n  style: 'camelCase'\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-transformation-function",children:"Custom Transformation Function"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Rename specific parameters.\nrename({\n  scope: 'data',\n  match: ['user_info', 'order_list'],\n  transform: api => {\n    const map = {\n      user_info: 'user',\n      order_list: 'orders'\n    };\n    return map[api.key] || api.key;\n  }\n});\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>i,a:()=>o});var s=a(67294);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);