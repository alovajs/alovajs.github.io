"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[8685],{35572:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>x,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=i(85893),s=i(11151);const t={title:"Apifox Fetcher"},o=void 0,d={id:"resource/devtool-plugins/apifox",title:"Apifox Fetcher",description:"Introduction",source:"@site/docs/resource/04-devtool-plugins/05-apifox.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/apifox",permalink:"/resource/devtool-plugins/apifox",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/05-apifox.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Apifox Fetcher"},sidebar:"resource",previous:{title:"API Filter",permalink:"/resource/devtool-plugins/filter-api"},next:{title:"Type Replacer",permalink:"/resource/devtool-plugins/import-type"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Parameter Descriptions",id:"parameter-descriptions",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Filter Interfaces by Tags",id:"filter-interfaces-by-tags",level:3},{value:"Exclude Interfaces by Tags",id:"exclude-interfaces-by-tags",level:3},{value:"Custom OpenAPI Version and Export Format",id:"custom-openapi-version-and-export-format",level:3},{value:"Include Apifox Extension Properties",id:"include-apifox-extension-properties",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"This plugin is used to directly import OpenAPI documents from Apifox without manually exporting local files to the project. Key features include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports fetching OpenAPI documents directly from Apifox projects"}),"\n",(0,r.jsx)(n.li,{children:"Supports filtering interfaces by tags"}),"\n",(0,r.jsx)(n.li,{children:"Supports multiple OpenAPI versions and export formats"}),"\n",(0,r.jsx)(n.li,{children:"Supports custom Apifox extension properties and folder tags"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["After using this plugin, there is no need to set the ",(0,r.jsx)(n.code,{children:"input"})," field."]}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"import { defineConfig } from '@alova/wormhole';\nimport { apifox } from '@alova/wormhole/plugin';\n\nexport default defineConfig({\n  generator: [\n    {\n      // ...\n      plugin: [\n        // Fetch OpenAPI documents from an Apifox project\n        apifox({\n          projectId: 'proj-123',\n          apifoxToken: 'token-abc'\n        })\n      ]\n    }\n  ]\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface APIFoxBody {\n  scope?: {\n    type?: 'ALL' | 'SELECTED_TAGS';\n    selectedTags?: string[];\n    excludedByTags?: string[];\n  };\n  options?: {\n    includeApifoxExtensionProperties?: boolean;\n    addFoldersToTags?: boolean;\n  };\n  oasVersion?: '2.0' | '3.0' | '3.1';\n  exportFormat?: 'JSON' | 'YAML';\n  environmentIds?: string[];\n}\n\ninterface ApifoxOptions\n  extends Pick<APIFoxBody, 'oasVersion' | 'exportFormat'>,\n    Pick<\n      NonNullable<APIFoxBody['options']>,\n      'includeApifoxExtensionProperties' | 'addFoldersToTags'\n    > {\n  projectId: string;\n  apifoxToken: string;\n  locale?: string;\n  apifoxVersion?: string;\n  selectedTags?: string[];\n  excludedByTags?: string[];\n}\n\nfunction apifox(ApifoxOptions: ApifoxOptions): ApiPlugin;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parameter-descriptions",children:"Parameter Descriptions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"projectId"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Apifox project ID"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"apifoxToken"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Apifox access token"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"locale"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'zh-CN'"})}),(0,r.jsx)(n.td,{children:"Language environment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"apifoxVersion"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'2024-03-28'"})}),(0,r.jsx)(n.td,{children:"Apifox API version"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectedTags"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Filter interfaces by tags"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"excludedByTags"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Exclude interfaces by tags"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"oasVersion"})}),(0,r.jsx)(n.td,{children:"`'2.0'"}),(0,r.jsx)(n.td,{children:"'3.0'"}),(0,r.jsx)(n.td,{children:"'3.1'`"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exportFormat"})}),(0,r.jsx)(n.td,{children:"`'JSON'"}),(0,r.jsx)(n.td,{children:"'YAML'`"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'JSON'"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"includeApifoxExtensionProperties"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Include Apifox extension properties"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"addFoldersToTags"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Use folder paths as tags"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,r.jsx)(n.h3,{id:"filter-interfaces-by-tags",children:"Filter Interfaces by Tags"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Fetch only interfaces with specific tags\napifox({\n  projectId: 'proj-123',\n  apifoxToken: 'token-abc',\n  selectedTags: ['order', 'user']\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exclude-interfaces-by-tags",children:"Exclude Interfaces by Tags"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Exclude interfaces with specific tags\napifox({\n  projectId: 'proj-123',\n  apifoxToken: 'token-abc',\n  excludedByTags: ['test', 'deprecated']\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-openapi-version-and-export-format",children:"Custom OpenAPI Version and Export Format"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Use OpenAPI 3.1 and YAML format\napifox({\n  projectId: 'proj-123',\n  apifoxToken: 'token-abc',\n  oasVersion: '3.1',\n  exportFormat: 'YAML'\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"include-apifox-extension-properties",children:"Include Apifox Extension Properties"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Include Apifox extension properties\napifox({\n  projectId: 'proj-123',\n  apifoxToken: 'token-abc',\n  includeApifoxExtensionProperties: true\n});\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>o});var r=i(67294);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);