"use strict";(self.webpackChunkalova_website=self.webpackChunkalova_website||[]).push([[1779],{52981:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var i=r(85893),t=r(11151),o=r(52991);const l={title:"Plugin Development Guide"},s=void 0,a={id:"resource/devtool-plugins/README",title:"Plugin Development Guide",description:"A devtool plugin is an object that contains various lifecycle hooks for injecting custom logic during code generation, simplifying the control of code generation logic.",source:"@site/docs/resource/04-devtool-plugins/README.md",sourceDirName:"resource/04-devtool-plugins",slug:"/resource/devtool-plugins/",permalink:"/resource/devtool-plugins/",draft:!1,unlisted:!1,editUrl:"https://github.com/alovajs/alovajs.github.io/blob/main/docs/resource/04-devtool-plugins/README.md",tags:[],version:"current",frontMatter:{title:"Plugin Development Guide"},sidebar:"resource",previous:{title:"stencil",permalink:"/resource/framework/stencil"},next:{title:"Renaming",permalink:"/resource/devtool-plugins/rename"}},c={},d=[{value:"Plugin Definition",id:"plugin-definition",level:3},{value:"Lifecycle Hooks Explained",id:"lifecycle-hooks-explained",level:3},{value:"Example Code",id:"example-code",level:3}];function u(e){const n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"A devtool plugin is an object that contains various lifecycle hooks for injecting custom logic during code generation, simplifying the control of code generation logic."}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, ",(0,i.jsx)(n.code,{children:"@alova/wormhole"})," provides preset plugins that can be used directly."]}),"\n","\n",(0,i.jsx)(o.Z,{}),"\n",(0,i.jsx)(n.p,{children:"Next, we will detail how to create and use plugins."}),"\n",(0,i.jsx)(n.h3,{id:"plugin-definition",children:"Plugin Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface ApiPlugin {\n  name?: string;\n\n  /**\n   * Replace or manipulate the configuration object passed to wormhole.\n   * Returning undefined or null will not replace anything.\n   */\n  config?: (config: GeneratorConfig) => MaybePromise<GeneratorConfig | undefined | null | void>;\n\n  /**\n   * Called before parsing the OpenAPI file.\n   */\n  beforeOpenapiParse?: (config: GeneratorConfig) => void;\n\n  /**\n   * Manipulate the document after parsing the OpenAPI file.\n   * Returning undefined or null will not replace anything.\n   */\n  afterOpenapiParse?: (\n    document: OpenAPIDocument\n  ) => MaybePromise<OpenAPIDocument | undefined | null | void>;\n\n  /**\n   * Manipulate template data before generating code.\n   * Returning undefined or null will not replace anything.\n   */\n  beforeCodeGenerate?: (\n    data: any,\n    outputFile: string,\n    ctx: {\n      renderTemplate: () => Promise<string>;\n      fileName: string;\n    }\n  ) => MaybePromise<string | undefined | null | void>;\n\n  /**\n   * Called after code generation is complete.\n   */\n  afterCodeGenerate?: (error?: Error) => void;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"lifecycle-hooks-explained",children:"Lifecycle Hooks Explained"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"config"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Replace or manipulate the configuration object passed to ",(0,i.jsx)(n.code,{children:"wormhole"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": Dynamically modify the generator's global configuration."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"beforeOpenapiParse"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Called before parsing the OpenAPI file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": Access the complete config for pre-processing."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"afterOpenapiParse"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Manipulate the document after parsing the OpenAPI file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": Modify the parsed OpenAPI document, such as adding or removing fields."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"beforeCodeGenerate"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Manipulate template data before generating code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": Dynamically modify template data or filenames."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"afterCodeGenerate"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Called after code generation is complete."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": Handle errors during generation or perform follow-up actions."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-code",children:"Example Code"}),"\n",(0,i.jsx)(n.p,{children:"Here is a simple plugin example for modifying tags."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { createPlugin } from '@alova/wormhole';\n\ninterface Config {\n  match: (tag: any) => boolean;\n  handler: (tag: any) => any;\n}\nconst createTagModifierPlugin = createPlugin((config: Config) => ({\n  afterOpenapiParse: apiDescription => {\n    if (apiDescription.tags) {\n      apiDescription.tags = apiDescription.tags.map(tag => {\n        if (config.match(tag)) {\n          return config.handler(tag);\n        }\n        return tag;\n      });\n    }\n    return apiDescription;\n  },\n  afterCodeGenerate: error => {\n    if (error) {\n      console.error('[tag-modifier] Error during code generation:', error);\n    } else {\n      console.log('[tag-modifier] Code generation complete!');\n    }\n  }\n}));\n"})}),"\n",(0,i.jsx)(n.p,{children:"Using the Plugin"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:'title="alova.config.js"',children:"export default defineConfig({\n  generator: [\n    {\n      // ...\n      createTagModifierPlugin({\n        match: tag => tag.includes('foo'),\n        handler: tag => tag.replace('foo', 'bar')\n      })\n    }\n  ]\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For more example code, visit the ",(0,i.jsx)(n.a,{href:"https://github.com/alovajs/devtools/tree/main/packages%2Fwormhole%2Fsrc%2Fplugins%2Fpresets",children:"Official Preset Plugin Source"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},52991:(e,n,r)=>{r.d(n,{Z:()=>j});r(67294);var i=r(90512),t=r(53438),o=r(33692),l=r(88824),s=r(13919),a=r(95999),c=r(92503);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=r(85893);function p(e){let{href:n,children:r}=e;return(0,u.jsx)(o.Z,{href:n,className:(0,i.Z)("card padding--lg",d.cardContainer),children:r})}function g(e){let{href:n,icon:r,title:t,description:o}=e;return(0,u.jsxs)(p,{href:n,children:[(0,u.jsxs)(c.Z,{as:"h2",className:(0,i.Z)("text--truncate",d.cardTitle),title:t,children:[r," ",t]}),o&&(0,u.jsx)("p",{className:(0,i.Z)("text--truncate",d.cardDescription),title:o,children:o})]})}function h(e){let{item:n}=e;const r=(0,t.LM)(n),i=function(){const{selectMessage:e}=(0,l.c)();return n=>e(n,(0,a.I)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return r?(0,u.jsx)(g,{href:r,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??i(n.items.length)}):null}function f(e){let{item:n}=e;const r=(0,s.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,t.xz)(n.docId??void 0);return(0,u.jsx)(g,{href:n.href,icon:r,title:n.label,description:n.description??i?.description})}function m(e){let{item:n}=e;switch(n.type){case"link":return(0,u.jsx)(f,{item:n});case"category":return(0,u.jsx)(h,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function x(e){let{className:n}=e;const r=(0,t.jA)();return(0,u.jsx)(j,{items:r.items,className:n})}function j(e){const{items:n,className:r}=e;if(!n)return(0,u.jsx)(x,{...e});const o=(0,t.MN)(n);return(0,u.jsx)("section",{className:(0,i.Z)("row",r),children:o.map(((e,n)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(m,{item:e})},n)))})}},88824:(e,n,r)=>{r.d(n,{c:()=>c});var i=r(67294),t=r(52263);const o=["zero","one","two","few","many","other"];function l(e){return o.filter((n=>e.includes(n)))}const s={locale:"en",pluralForms:l(["one","other"]),select:e=>1===e?"one":"other"};function a(){const{i18n:{currentLocale:e}}=(0,t.Z)();return(0,i.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:l(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),s}}),[e])}function c(){const e=a();return{selectMessage:(n,r)=>function(e,n,r){const i=e.split("|");if(1===i.length)return i[0];i.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${i.length}: ${e}`);const t=r.select(n),o=r.pluralForms.indexOf(t);return i[Math.min(o,i.length-1)]}(r,n,e)}}},11151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>l});var i=r(67294);const t={},o=i.createContext(t);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);